{
  "addons": ["heroku-postgresql:hobby-dev", "rediscloud:30"],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-apt"
    },
    {
      "url": "https://github.com/moneymeets/python-poetry-buildpack"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    }
  ],
  "description": "mit-learn",
  "env": {
    "AI_CACHE_TIMEOUT": {
      "description": "Timeout for AI cache",
      "required": false
    },
    "AI_DEBUG": {
      "description": "Include debug information in AI responses if True",
      "required": false
    },
    "AI_MIT_SEARCH_URL": {
      "description": "URL for AI search agent",
      "required": false
    },
    "AI_MODEL": {
      "description": "Model to use for AI functionality",
      "required": false
    },
    "AI_MODEL_API": {
      "description": "The API used for the AI model",
      "required": false
    },
    "AI_PROXY_CLASS": {
      "description": "Proxy class for AI functionality",
      "required": false
    },
    "AI_PROXY_URL": {
      "description": "URL for AI proxy",
      "required": false
    },
    "AI_PROXY_AUTH_TOKEN": {
      "description": "Auth token for AI proxy",
      "required": false
    },
    "AI_MAX_PARALLEL_REQUESTS": {
      "description": "Max parallel requests/user for AI functionality",
      "required": false
    },
    "AI_TPM_LIMIT": {
      "description": "Tokens/minute limit per user for AI functionality",
      "required": false
    },
    "AI_RPM_LIMIT": {
      "description": "Requests/minute limit per user for AI functionality",
      "required": false
    },
    "AI_BUDGET_DURATION": {
      "description": "Length of time before a user's budget usage resets",
      "required": false
    },
    "AI_MAX_BUDGET": {
      "description": "Max budget per user for AI functionality",
      "required": false
    },
    "AI_ANON_LIMIT_MULTIPLIER": {
      "description": "Multiplier for per-user limit/budget shared by anonymous users",
      "required": false
    },
    "AI_MIT_SEARCH_LIMIT": {
      "description": "Limit parameter value for AI search agent",
      "required": false
    },
    "ALLOWED_HOSTS": {
      "description": "",
      "required": false
    },
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "CELERY_WORKER_MAX_MEMORY_PER_CHILD": {
      "description": "Max memory to be used by celery worker child",
      "required": false
    },
    "CORS_ALLOWED_ORIGINS": {
      "description": "A list of origins that are authorized to make cross-site HTTP requests",
      "required": false
    },
    "CORS_ALLOWED_ORIGIN_REGEXES": {
      "description": "A list of regexes that match origins that are authorized to make cross-site HTTP requests",
      "required": false
    },
    "CSRF_COOKIE_DOMAIN": {
      "description": "The domain to set the CSRF cookie on",
      "required": false
    },
    "MAILGUN_URL": {
      "description": "The URL for communicating with Mailgun"
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API"
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from"
    },
    "MAILGUN_BCC_TO_EMAIL": {
      "description": "Email address used with bcc email",
      "required": false
    },
    "MAILGUN_SENDER_DOMAIN": {
      "description": "Domain used for emails sent via mailgun"
    },
    "MITOL_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to.",
      "required": false
    },
    "MITOL_AUTHENTICATION_PLUGINS": {
      "description": "List of pluggy plugins to use for authentication",
      "required": false
    },
    "MITOL_APP_BASE_URL": {
      "description": "Base url to create links to the app",
      "required": false
    },
    "MITOL_COOKIE_NAME": {
      "description": "Name of the cookie for the JWT auth token",
      "required": false
    },
    "MITOL_COOKIE_DOMAIN": {
      "description": "Domain for the cookie for the JWT auth token",
      "required": false
    },
    "MITOL_DB_CONN_MAX_AGE": {
      "value": "0",
      "required": false
    },
    "MITOL_DB_DISABLE_SSL": {
      "value": "True",
      "required": false
    },
    "MITOL_DB_DISABLE_SS_CURSORS": {
      "description": "Disable server-side cursors",
      "required": false
    },
    "MITOL_EMAIL_HOST": {
      "description": "Outgoing e-mail settings",
      "required": false
    },
    "MITOL_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail settings",
      "required": false
    },
    "MITOL_EMAIL_PORT": {
      "description": "Outgoing e-mail settings",
      "value": "587",
      "required": false
    },
    "MITOL_EMAIL_TLS": {
      "description": "Outgoing e-mail settings",
      "value": "True",
      "required": false
    },
    "MITOL_EMAIL_USER": {
      "description": "Outgoing e-mail settings",
      "required": false
    },
    "MITOL_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)",
      "required": false
    },
    "MITOL_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITOL_LOG_LEVEL": {
      "description": "The log level for the application",
      "required": false,
      "value": "INFO"
    },
    "MITOL_NEW_USER_LOGIN_URL": {
      "description": "Url to redirect new users to",
      "required": false
    },
    "MITOL_JWT_SECRET": {
      "description": "Shared secret for JWT auth tokens",
      "required": false
    },
    "MITOL_NOINDEX": {
      "description": "Prevent search engines from indexing the site",
      "required": false
    },
    "MITOL_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting.",
      "value": "True",
      "required": false
    },
    "MITOL_SIMILAR_RESOURCES_COUNT": {
      "description": "Number of similar resources to return",
      "required": false
    },
    "MITOL_TITLE": {
      "description": "Title of the MIT Learn site",
      "required": false
    },
    "MITOL_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support",
      "required": false
    },
    "MITOL_UNSUBSCRIBE_TOKEN_MAX_AGE_SECONDS": {
      "description": "Maximum age of unsubscribe tokens in seconds",
      "required": false
    },
    "MITOL_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "value": "False",
      "required": false
    },
    "NEW_RELIC_APP_NAME": {
      "description": "Application identifier in New Relic."
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "5"
    },
    "RECAPTCHA_SITE_KEY": {
      "description": "Google Recaptcha site key",
      "required": false
    },
    "RECAPTCHA_SECRET_KEY": {
      "description": "Google Recaptcha secret key",
      "required": false
    },
    "REQUESTS_TIMEOUT": {
      "description": "Default timeout for requests",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret"
    },
    "SEE_API_ACCESS_TOKEN_URL": {
      "description": "URL to retrieve a MITx access token",
      "required": false
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry"
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "STATUS_TOKEN": {
      "description": "Token to access the status API."
    },
    "USE_X_FORWARDED_PORT": {
      "description": "Use the X-Forwarded-Port",
      "required": false
    },
    "USE_X_FORWARDED_HOST": {
      "description": "Use the X-Forwarded-Host",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_OIDC_ENDPOINT": {
      "description": "The base URI for OpenID Connect discovery, https://<OIDC_ENDPOINT>/ without .well-known/openid-configuration.",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_KEY": {
      "description": "The client ID provided by the OpenID Connect provider.",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_SECRET": {
      "description": "The client secret provided by the OpenID Connect provider.",
      "required": false
    },
    "SOCIAL_AUTH_ALLOWED_REDIRECT_HOSTS": {
      "description": "The list of additional redirect hosts allowed for social auth.",
      "required": false
    },
    "USERINFO_URL": {
      "description": "Provder endpoint where client sends requests for identity claims.",
      "required": false
    },
    "ACCESS_TOKEN_URL": {
      "description": "Provider endpoint where client exchanges the authorization code for tokens.",
      "required": false
    },
    "AUTHORIZATION_URL": {
      "description": "Provider endpoint where the user is asked to authenticate.",
      "required": false
    },
    "FEATURE_KEYCLOAK_ENABLED": {
      "description": "Authentication functionality is managed by Keycloak.",
      "required": true
    },
    "KEYCLOAK_REALM_NAME": {
      "description": "The Keycloak realm name in which Open Discussions has a client configuration.",
      "required": true
    },
    "KEYCLOAK_BASE_URL": {
      "description": "The base URL for a Keycloak configuration.",
      "required": true
    },
    "POSTHOG_API_HOST": {
      "description": "API host for PostHog",
      "required": false
    },
    "POSTHOG_PROJECT_API_KEY": {
      "description": "Project API key to capture events in PostHog",
      "required": false
    },
    "POSTHOG_PERSONAL_API_KEY": {
      "description": "Private API key to communicate with PostHog",
      "required": false
    },
    "POSTHOG_PROJECT_ID": {
      "description": "PostHog project ID for the application",
      "required": false
    },
    "POSTHOG_TIMEOUT_MS": {
      "description": "Timeout for communication with PostHog API",
      "required": false
    }
  },
  "keywords": ["Django", "Python", "MIT", "Office of Digital Learning"],
  "name": "mit_open",
  "repository": "https://github.com/mitodl/learn-ai",
  "scripts": {
    "postdeploy": "./manage.py migrate --noinput"
  },
  "success_url": "/",
  "website": "https://github.com/mitodl/learn-ai"
}
